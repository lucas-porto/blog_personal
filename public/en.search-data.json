{"/about/":{"data":{"":"I’m Eletrical Engineer who moved to data science world after a long period of time working with Telecom Projects. My main coding language is python for now, but I’m trying learn also Go, for no reason.\nIf you need a Machine Learning, Data Scients for any project or contract, get in touch via linkedin."},"title":"About"},"/blog/first_post/":{"data":{"the-explanation#The Explanation":"The ExplanationMy main goal right now is getting better at coding and machine learning and besides showing my skills as everyone tells us to do.\nI’m not so good at showing my skills nor keeping easily available any project or semi-finished project that I got involved with. So this blog started for this reason, to keep showing or journaling my skills and doings, as long as I can or get interested.\nI’ll try to cover some specific topics that I didn’t find help for in Portuguese, so I’ll post in English and a translated version in Portuguese."},"title":"Initial Commit"},"/blog/the_blog/":{"data":{"cloudflare-configurations--github-pages#Cloudflare configurations + Github Pages":"DisclaimerGo to main documentation if you need some more explanation, here I’ll show the simple version to create this blog.\nInstall Hugo For Windows I recomend using Winget, on Powershell:\nwinget install Hugo.Hugo.Extended Configure Go to the folder in which you start your project and run this commands:\n# create a new project with yaml as configuration hugo new site my-blog --format=yaml cd my-blog # set your github hugo mod init github.com/username/my-blog # add Hextra theme hugo mod get github.com/imfing/hextra I choose the Hextra theme and his startup are little different of the used in Hugo configuration as shown in the docs.\nCreate the content pages Create a new content page is very simple, just run the following commands:\nhugo new content/_index.md hugo new content/docs/_index.md Preview hugo server --buildDrafts --disableFastRender Host on GitHub Pages I recommend use the configuration for Hextra has in their documentation. Here.\nGithub Actions Configuration This is a configuration in august 2025, reach the site to get updated version.\n.github/workflows/pages.yaml# Sample workflow for building and deploying a Hugo site to GitHub Pages name: Deploy Hugo site to Pages on: # Runs on pushes targeting the default branch push: branches: [\"main\"] # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued. # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete. concurrency: group: \"pages\" cancel-in-progress: false # Default to bash defaults: run: shell: bash jobs: # Build job build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.138.0 steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 # fetch all history for .GitInfo and .Lastmod submodules: recursive - name: Setup Go uses: actions/setup-go@v5 with: go-version: '1.22' - name: Setup Pages id: pages uses: actions/configure-pages@v4 - name: Setup Hugo run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026\u0026 sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: | hugo \\ --gc --minify \\ --baseURL \"${{ steps.pages.outputs.base_url }}/\" - name: Upload artifact uses: actions/upload-pages-artifact@v3 with: path: ./public # Deployment job deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v4 Cloudflare configurations + Github Pages As I wanted my on domain, for learning and more beautiful presentation, I bought my domain and wanted to configure it.\nAs start a easy:\nBuy yourdomain.com Add DNS: Configure your root domain: Type: A | Name @ | Contend: 185.199.108.153 | Proxy: OFF (by now) (Repeat for IPs: 185.199.109.153, 185.199.110.153, 185.199.111.153)\nConfigure your subdomain Type: CNAME | Name: www | Contend: seuuser.github.io | Proxy: OFF (by now) Configure Github Pages On your repo: Settings -\u003e Pages -\u003e Custom Domain Add yourdomain.com and save Wait ~30 minutes until: ✅ “DNS check successful” Activate HTTPS @ Github Pages activate: Enforce HTTPS @ Cloudflare activate: SSL/TLS -\u003e Full (strict) Redirect @ Cloudflare -\u003e Rules -\u003e Page Rules URL: seudominio.com/* Action: Forwarding URL (301) → https://www.seudominio.com/$1 For validation you can run the command:\ncurl -I https://www.seudominio.com Excpected Output:\nHTTP/2 200 x-github-request-id: ... And this blog was born.","disclaimer#Disclaimer":"","host-on-github-pages#Host on GitHub Pages":"","install-hugo#Install Hugo":""},"title":"How Setup an easy blog with Hugo"}}